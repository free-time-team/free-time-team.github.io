\input texinfo

@documentlanguage en
@documentencoding UTF-8

@settitle linux kernel study

@copying
This manual is for Document, version 1.0.

Copyright @copyright{} years free time team.

@quotation
Permission is granted to
@end quotation
@end copying

@titlepage
@title name-of-manual-when-printed en
@subtitle subtitle-if-any
@subtitle second-subtitle
@author author

@c  The following two commands
@c  start the copyright page.
@page
@vskip 0pt plus 1filll
@insertcopying

Published by
@end titlepage

@c So the toc is printed at the start.
@contents

@ifnottex
@node Top
@top linux kernel study

This manual is for program, version version.
@end ifnottex

@menu
* kernel code download::
* install qemu::
* rootfs::
* install toolchain::
* build & run::
* access host directory::
* resource::
@c * Copying::  free time team
@end menu

@node kernel code download
@chapter kernel code download

@url{https://www.kernel.org/, https://www.kernel.org/}

@url{https://cdn.kernel.org/pub/linux/kernel/, https://cdn.kernel.org/pub/linux/kernel/}

@node install qemu
@chapter install qemu

install qemu => @url{https://free-time-team.github.io/document/ubuntu_study/basic/qemu_install.html#install-from-source-code, install from source code}

@node rootfs
@chapter rootfs

download rootfs => @url{https://github.com/sys-build/resource_dev, rootfs.cpio}

unpack kernel source code

cp rootfs.cpio to your kernel source code's root directory

@node install toolchain
@chapter install toolchain

sudo apt-get install g++-aarch64-linux-gnu

@node build & run
@chapter build & run

change to your kernel's root directory

add rootfs.cpio

@example
add the line: CONFIG_INITRAMFS_SOURCE="/your/rootfs/absolute/path/rootfs.cpio"
to the file: arch/arm64/configs/defconfig
@end example

@example
make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- O=../out defconfig

make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- O=../out -j4 Image

/to/your/path/qemu-2.10.0/bin/qemu-system-aarch64 -machine virt -cpu cortex-a57 -machine type=virt -nographic -smp 1 -m 2048 -kernel ../out/arch/arm64/boot/Image --append "console=ttyAMA0"
@end example

@node access host directory
@chapter access host directory

qemu-system-aarch64 -machine virt -cpu cortex-a57 -machine type=virt -nographic -smp 1 -m 2048 -kernel ../out/arch/arm64/boot/Image @--@--append "console=ttyAMA0" -fsdev local,id=r,path=../,security_model=none -device virtio-9p-device,fsdev=r,mount_tag=r

@example
mkdir /mnt
mount -t 9p -o trans=virtio r /mnt
cd /mnt
@end example

@node resource
@chapter resource

@itemize
@item
@b{development resource}
@end itemize

@example
@url{https://github.com/sys-build/resource_dev.git, https://github.com/sys-build/resource_dev.git}
@end example

@bye
